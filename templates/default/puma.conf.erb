# Generated by Chef. Changes will be overwritten.
# Based on: https://github.com/puma/puma/blob/v3.11.2/tools/jungle/upstart/puma.conf

# /etc/init/puma.conf - Puma config

# This example config should work with Ubuntu 12.04+.  It
# allows you to manage a Puma instance with
# Upstart, Ubuntu's native service management tool.
#
# Save this config as /etc/init/puma.conf then manage puma with:
#   sudo start puma
#   sudo stop puma
#   sudo status puma
#
# or use the service command:
#   sudo service puma {start,stop,restart,status}
#

description "Puma Background Worker"

# This starts upon bootup and stops on shutdown
start on runlevel [2345]
stop on runlevel [06]

# change apps to match your deployment user if you want to use this as a less privileged user (recommended!)
setuid <%= @user %>
setgid <%= @group %>

respawn
respawn limit 3 30

script
# this script runs in /bin/sh by default
# respawn as bash so we can source in rbenv/rvm
# quoted heredoc to tell /bin/sh not to interpret
# variables

# source ENV variables manually as Upstart doesn't, eg:
#. /etc/environment

exec /bin/bash <<'EOT'
  # set HOME to the setuid user's home, there doesn't seem to be a better, portable way
  export HOME="$(eval echo ~$(id -un))"

  if [ -d "/usr/local/rbenv/bin" ]; then
    export PATH="/usr/local/rbenv/bin:/usr/local/rbenv/shims:$PATH"
  elif [ -d "$HOME/.rbenv/bin" ]; then
    export PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"
  elif [ -f  /etc/profile.d/rvm.sh ]; then
    source /etc/profile.d/rvm.sh
  elif [ -f /usr/local/rvm/scripts/rvm ]; then
    source /etc/profile.d/rvm.sh
  elif [ -f "$HOME/.rvm/scripts/rvm" ]; then
    source "$HOME/.rvm/scripts/rvm"
  elif [ -f /usr/local/share/chruby/chruby.sh ]; then
    source /usr/local/share/chruby/chruby.sh
    if [ -f /usr/local/share/chruby/auto.sh ]; then
      source /usr/local/share/chruby/auto.sh
    fi
    # if you aren't using auto, set your version here
    # chruby 2.0.0
  #
  # Using a global Ruby install with env variables
  # listed in <%= @env_file %>
  elif [ -f "<%= @env_file %>" ]; then
    while IFS="" read -r p || [ -n "$p" ]; do
      if ( echo "$p" | grep -vq '^#' ); then
        eval export "$p";
      fi
    done < "<%= @env_file %>"
  fi

  cd <%= @app_dir %>
  logger -t puma "Starting server: <%= @app_dir %>"

  exec bundle exec puma -C <%= @conf_path %>
EOT
end script
